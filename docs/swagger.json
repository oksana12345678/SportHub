{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "<SportPoint App>",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "<Service for working with backend documentation. >",
    "contact": {
      "email": "oksana.tanashuk@gmail.com"
    }
  },
  "servers": [
    {
      "url": "https://sportpoint-backend.onrender.com"
    },
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "UserProfile",
      "description": "Operations about users profiles."
    },
    {
      "name": "SearchUserProfile",
      "description": "Search operations"
    },
    {
      "name": "Reviews",
      "description": "Operations related to user reviews."
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register user",
        "operationId": "createUser",
        "description": "Register user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password",
                  "role"
                ],
                "properties": {
                  "email": {
                    "description": "User email",
                    "type": "string",
                    "example": "example@gmail.com"
                  },
                  "password": {
                    "description": "Create a password",
                    "type": "string",
                    "example": "rwe2135"
                  },
                  "role": {
                    "description": "User role",
                    "type": "string",
                    "example": "customer"
                  },
                  "firstName": {
                    "description": "User first name",
                    "type": "string",
                    "example": "Володимир"
                  },
                  "lastName": {
                    "description": "User last name",
                    "type": "string",
                    "example": "Кіт"
                  },
                  "phone": {
                    "description": "User phone number",
                    "type": "string",
                    "example": "+380678654323"
                  },
                  "address": {
                    "description": "User address",
                    "type": "string",
                    "example": " Шевченка, 30"
                  },
                  "city": {
                    "description": "User city",
                    "type": "string",
                    "example": "Львів"
                  },
                  "abilities": {
                    "description": "User abilities",
                    "type": "string",
                    "example": "Coaching"
                  },
                  "sport": {
                    "description": "User sport",
                    "type": "string",
                    "example": "Карате"
                  },
                  "avatar": {
                    "description": "User avatar",
                    "type": "string",
                    "format": "uri",
                    "example": "https://example.com/avatar.jpg"
                  },
                  "images": {
                    "description": "Array of image URLs",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    },
                    "example": [
                      "https://example.com/image1.jpg",
                      "https://example.com/image2.jpg"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Register a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "email"
                      ],
                      "properties": {
                        "email": {
                          "type": "string",
                          "description": "Registered user email",
                          "example": "example@gmail.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User email",
                    "type": "string",
                    "example": "example@gmail.com"
                  },
                  "password": {
                    "description": "Enter your password",
                    "type": "string",
                    "example": "rwe2135"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully login a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/auth"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logout user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Logout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 204
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/refresh/current": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh current",
        "operationId": "refreshCurrent",
        "description": "Refresh",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "description": "Refresh token",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Refresh current",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "token": {
                      "type": "string",
                      "description": "JWT access token.",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "refreshToken": {
                      "type": "string",
                      "description": "JWT refresh token.",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/verify/:verificationToken": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Verify user email",
        "operationId": "verifyEmail",
        "description": "Verifies user email using a verification token.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Email verified successfully. Returns new authentication tokens.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT access token.",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "refreshToken": {
                      "type": "string",
                      "description": "JWT refresh token.",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/verify": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Update user password",
        "operationId": "updatePassword",
        "description": "Update user password using a  tokens.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "password",
                  "verifyCode"
                ],
                "properties": {
                  "verifyCode": {
                    "description": "Enter verify code",
                    "type": "number",
                    "example": "92736458292"
                  },
                  "password": {
                    "description": "Enter your password",
                    "type": "string",
                    "example": "rwe2135"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Password updated successfully. Returns new authentication tokens.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT access token.",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "refreshToken": {
                      "type": "string",
                      "description": "JWT refresh token.",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "message": {
                      "type": "string",
                      "description": "Human-readable message.",
                      "example": "Your password has been successfully updated!"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/send/verify": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Send message for update user password",
        "operationId": "sendUpdatePasswordMessage",
        "description": "Update user password message send by email.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "description": "User email",
                    "type": "string",
                    "example": "example@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Password update message sent to email. Returns status and message.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Human-readable message.",
                      "example": "The password update code has been successfully sent to your email! Please go there to continue updating your password!"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/delete/account": {
      "delete": {
        "tags": [
          "Auth"
        ],
        "summary": "Delete user account",
        "operationId": "deleteUserAccount",
        "description": "Delete  user account",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Delete  user account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 204
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/change/password": {
      "put": {
        "tags": [
          "Auth"
        ],
        "summary": "Update user password",
        "operationId": "updateUserPassword",
        "description": "Update user password",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "oldPassword",
                  "newPassword"
                ],
                "properties": {
                  "oldPassword": {
                    "description": "Enter your old password",
                    "type": "string",
                    "example": "rwe2135"
                  },
                  "newPassword": {
                    "description": "Enter your new password",
                    "type": "string",
                    "example": "rwe2135"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "update password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully update password!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": [
          "UserProfile"
        ],
        "summary": "Get user profile",
        "operationId": "getUserProfile",
        "description": "Get user profile with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found user profile with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "string",
                          "format": "ObjectId",
                          "example": "65f2dc3b8a7e8e3e3b5a3a1b"
                        },
                        "firstName": {
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 50,
                          "description": "First  name of the user. or name of sport club",
                          "example": "John|| The Best Gym "
                        },
                        "lastName": {
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 50,
                          "description": " Last name of the user.",
                          "example": "Doe"
                        },
                        "avatar": {
                          "type": "string",
                          "format": "uri",
                          "description": "Avatar URL of the user.",
                          "example": "https://example.com/avatar.jpg"
                        },
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uri"
                          },
                          "description": "Array of image URLs for the sport gym.",
                          "example": [
                            "https://example.com/image1.jpg",
                            "https://example.com/image2.jpg"
                          ]
                        },
                        "certificates": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uri"
                          },
                          "description": "Array of URLs for the coach certificates or gym.",
                          "example": [
                            "https://example.com/certificate1.pdf",
                            "https://example.com/certificate2.pdf"
                          ]
                        },
                        "description": {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "description": "Address of the  sport club or coach.",
                              "example": "Odesa, 123 Main St"
                            },
                            "city": {
                              "type": "string",
                              "description": "City of the sport club.",
                              "example": "New York"
                            },
                            "short_desc": {
                              "type": "string",
                              "description": "Short description of the coach or sport club.",
                              "example": "Experienced coach in football."
                            },
                            "abilities": {
                              "type": "array",
                              "description": "User’s abilities.",
                              "example": [
                                "Coaching",
                                "Mentoring"
                              ]
                            },
                            "age": {
                              "type": "string",
                              "description": "User age",
                              "example": "40"
                            },
                            "equipment": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "List of gym equipment.",
                              "example": [
                                "Pool",
                                "Sauna"
                              ]
                            },
                            "experience": {
                              "type": "string",
                              "description": "Experience dates of the coach.",
                              "example": "8"
                            },
                            "schedule": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "days": {
                                    "type": "string",
                                    "description": "Days of the week.",
                                    "example": "Monday, Wednesday"
                                  },
                                  "hours": {
                                    "type": "string",
                                    "description": "Working hours.",
                                    "example": "9:00 AM - 5:00 PM"
                                  },
                                  "date": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "Date of the schedule. For example, special days such as holidays",
                                    "example": "2023-12-01"
                                  }
                                }
                              }
                            },
                            "social_links": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the social platform.",
                                    "example": "Facebook"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "URL to the social media profile.",
                                    "example": "https://facebook.com/example"
                                  }
                                }
                              }
                            },
                            "price": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Price name or description.",
                                    "example": "Monthly Subscription"
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Price description.",
                                    "example": "07:00 - 15:00."
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Price amount.",
                                    "example": "99.99"
                                  }
                                }
                              }
                            },
                            "phone": {
                              "type": "string",
                              "pattern": "^\\+?[0-9]{10,15}$",
                              "description": "Phone number of the gym or coach .",
                              "example": "+1234567890"
                            },
                            "email": {
                              "type": "string",
                              "format": "email",
                              "description": "Email address of the user.",
                              "example": "example@gmail.com"
                            }
                          }
                        },
                        "club": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "ID of the club",
                                "example": "65ca63kj7ae7f10c88b598384"
                              },
                              "firstName": {
                                "type": "string",
                                "description": "Name of the club",
                                "example": "Fitness Club"
                              },
                              "lastName": {
                                "type": "string",
                                "description": "Name of the club",
                                "example": "Fitness Club"
                              },
                              "address": {
                                "type": "string",
                                "description": "Address of the club",
                                "example": "123 Main St"
                              },
                              "city": {
                                "type": "string",
                                "description": "City of the club",
                                "example": "New York"
                              }
                            }
                          },
                          "description": "List of clubs where the coach works",
                          "example": [
                            {
                              "id": "65ca63kj7ae7f10c88b598384",
                              "firstName": "Fitness",
                              "lastName": "Club",
                              "address": "123 Main St",
                              "city": "New York"
                            },
                            {
                              "id": "65coo7e7ae7f10c88b598384",
                              "firstName": "Yoga",
                              "lastName": "Wellness",
                              "address": "456 Elm St",
                              "city": "Los Angeles"
                            }
                          ]
                        },
                        "coach": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "ID of the coach job",
                                "example": "65ca63kj7ae7f10c88b598384"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the coach job",
                                "example": "Personal Trainer"
                              },
                              "address": {
                                "type": "string",
                                "description": "Address of the coach job",
                                "example": "789 Oak St"
                              },
                              "city": {
                                "type": "string",
                                "description": "City of the coach job",
                                "example": "New York"
                              }
                            }
                          },
                          "description": "List of current coach jobs at this sports club",
                          "example": [
                            {
                              "id": "65ca63kj7ae7f10c88b598384",
                              "firstName": "Personal",
                              "lastName": "Trainer",
                              "address": "789 Oak St",
                              "city": "New York"
                            },
                            {
                              "id": "65coo7e7ae7f10c88b598384",
                              "firstName": "Group",
                              "lastName": "Trainer",
                              "address": "101 Pine St",
                              "city": "Los Angeles"
                            }
                          ]
                        },
                        "favorite": {
                          "type": "object",
                          "properties": {
                            "userId": {
                              "type": "string",
                              "format": "uuid",
                              "description": "User ID of the favorite item",
                              "example": "65ca63kj7ae7f10c88b598384"
                            },
                            "role": {
                              "type": "string",
                              "description": "Role associated with the favorite item",
                              "example": "coach"
                            }
                          }
                        },
                        "sport": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "What is the name of the sport?",
                            "example": [
                              "Football",
                              "Basketball",
                              "Hockey",
                              "Tennis",
                              "Golf"
                            ]
                          }
                        },
                        "role": {
                          "type": "string",
                          "description": "User role",
                          "example": "coach || customer || adminClub"
                        },
                        "coaches_list": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/userProfile"
                          }
                        },
                        "work_list": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/userProfile"
                          }
                        },
                        "user_comments": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/reviews"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "UserProfile"
        ],
        "summary": "Patch user profile",
        "operationId": "patchUserProfile",
        "description": "Patch user profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "firstName": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 50,
                    "description": "First  name of the user or sport club name .",
                    "example": "John Doe || Beast Gim"
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 50,
                    "description": " Last name of the user.",
                    "example": "Doe"
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "Avatar URL of the user.",
                    "example": "https://example.com/avatar.jpg"
                  },
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Array of image URLs for the sport club.",
                    "example": [
                      "https://example.com/image1.jpg",
                      "https://example.com/image2.jpg"
                    ]
                  },
                  "certificates": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Array of URLs for the coach certificates.",
                    "example": [
                      "https://example.com/certificate1.pdf",
                      "https://example.com/certificate2.pdf"
                    ]
                  },
                  "description": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "Address of the sport club.",
                        "example": "123 Main St"
                      },
                      "city": {
                        "type": "string",
                        "description": "City of the sport club.",
                        "example": "New York"
                      },
                      "short_desc": {
                        "type": "string",
                        "description": "Short description of the coach or sport club.",
                        "example": "Experienced coach in football."
                      },
                      "abilities": {
                        "type": "array",
                        "description": "Coach abilities.",
                        "example": [
                          "Coaching",
                          "Mentoring"
                        ]
                      },
                      "age": {
                        "type": "string",
                        "description": "User age",
                        "example": "40"
                      },
                      "equipment": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "List of sport club equipment.",
                        "example": [
                          "Pool",
                          "Sauna"
                        ]
                      },
                      "experience": {
                        "type": "string",
                        "description": "Experience dates of the user.",
                        "example": "6"
                      },
                      "schedule": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "days": {
                              "type": "string",
                              "description": "Days of the week.",
                              "example": "Monday, Wednesday"
                            },
                            "hours": {
                              "type": "string",
                              "description": "Working hours.",
                              "example": "9:00 AM - 5:00 PM"
                            },
                            "date": {
                              "type": "string",
                              "format": "date",
                              "description": "Date of the schedule.",
                              "example": "2023-12-01"
                            }
                          }
                        }
                      },
                      "social_links": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the social platform.",
                              "example": "Facebook"
                            },
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "description": "URL to the social media profile.",
                              "example": "https://facebook.com/example"
                            }
                          }
                        }
                      },
                      "price": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Price name or description.",
                              "example": "Monthly Subscription"
                            },
                            "description": {
                              "type": "string",
                              "description": "Price description.",
                              "example": "07:00 - 15:00."
                            },
                            "amount": {
                              "type": "string",
                              "description": "Price amount.",
                              "example": "99.99"
                            }
                          }
                        }
                      },
                      "phone": {
                        "type": "string",
                        "pattern": "^\\+?[0-9]{10,15}$",
                        "description": "Phone number of the user.",
                        "example": "+1234567890"
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "description": "Email address of the user.",
                        "example": "example@gmail.com"
                      }
                    }
                  },
                  "club": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "ID of the club",
                          "example": "65ca63kj7ae7f10c88b598384"
                        },
                        "firstName": {
                          "type": "string",
                          "description": "Name of the club",
                          "example": "Fitness Club"
                        },
                        "lastName": {
                          "type": "string",
                          "description": "Name of the club",
                          "example": "Fitness Club"
                        },
                        "address": {
                          "type": "string",
                          "description": "Address of the club",
                          "example": "123 Main St"
                        },
                        "city": {
                          "type": "string",
                          "description": "City of the club",
                          "example": "New York"
                        }
                      }
                    },
                    "description": "List of clubs where the coach works",
                    "example": [
                      {
                        "id": "65ca63kj7ae7f10c88b598384",
                        "firstName": "Fitness",
                        "lastName": "Club",
                        "address": "123 Main St",
                        "city": "New York"
                      },
                      {
                        "id": "65coo7e7ae7f10c88b598384",
                        "firstName": "Yoga",
                        "lastName": "Wellness",
                        "address": "456 Elm St",
                        "city": "Los Angeles"
                      }
                    ]
                  },
                  "coach": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "ID of the coach job",
                          "example": "65ca63kj7ae7f10c88b598384"
                        },
                        "firstName": {
                          "type": "string",
                          "description": "Name of the coach job",
                          "example": "Personal Trainer"
                        },
                        "address": {
                          "type": "string",
                          "description": "Address of the coach job",
                          "example": "789 Oak St"
                        },
                        "city": {
                          "type": "string",
                          "description": "City of the coach job",
                          "example": "New York"
                        }
                      }
                    },
                    "description": "List of current coach jobs at this sports club",
                    "example": [
                      {
                        "id": "65ca63kj7ae7f10c88b598384",
                        "firstName": "Personal",
                        "lastName": "Trainer",
                        "address": "789 Oak St",
                        "city": "Chicago"
                      },
                      {
                        "id": "65coo7e7ae7f10c88b598384",
                        "firstName": "Group",
                        "lastName": "Trainer",
                        "address": "101 Pine St",
                        "city": "Los Angeles"
                      }
                    ]
                  },
                  "favorite": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "User ID of the favorite item",
                        "example": "65ca63kj7ae7f10c88b598384"
                      },
                      "role": {
                        "type": "string",
                        "description": "Role associated with the favorite item",
                        "example": "coach"
                      }
                    }
                  },
                  "sport": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "What is the name of the sport?",
                      "example": [
                        "Football",
                        "Basketball",
                        "Hockey",
                        "Tennis",
                        "Golf"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched user profile!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/userProfile"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/search/by-name": {
      "get": {
        "tags": [
          "SearchUserProfile"
        ],
        "summary": "Get user profile by name",
        "operationId": "getSearchedProfile",
        "description": "Get user profile with this endpoint by name",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "description": "The name (or part of it) to search for",
            "schema": {
              "type": "string",
              "example": "John Doe"
            }
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "description": "The role (or part of it) to search for",
            "schema": {
              "type": "string",
              "example": "adminClub"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name",
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Found profiles with name \"John Doe\"!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/userProfile"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/cards": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "Get all cards with filters",
        "operationId": "getAllCards",
        "description": "Retrieve a list of coach and clubs with filtering and sorting options",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of items per page"
          },
          {
            "name": "address",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter by city"
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter by role (adminClub or coach)"
          },
          {
            "name": "countReview",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Minimum number of reviews"
          },
          {
            "name": "minPrice",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 0
            },
            "description": "Minimum number of reviews"
          },
          {
            "name": "maxPrice",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "default": 5
            },
            "description": "Maximum number of reviews"
          },
          {
            "name": "abilities",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "description": "Filter by abilities"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "нові",
                "популярні",
                "ціна_за_зростанням",
                "ціна_за_спаданням"
              ],
              "default": "new"
            },
            "description": "Sorting options:\n - 'new' - By creation date\n - 'popular' By reviews count\n - 'price_asc' By price (ascending)\n - 'price_dec' By price (descending)\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with filtered list of cards",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found card with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/userProfile"
                      }
                    },
                    "paginationData": {
                      "type": "object",
                      "properties": {
                        "totalItems": {
                          "type": "integer"
                        },
                        "totalPages": {
                          "type": "integer"
                        },
                        "currentPage": {
                          "type": "integer"
                        }
                      }
                    },
                    "club": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "ID of the club",
                            "example": "65ca63kj7ae7f10c88b598384"
                          },
                          "firstName": {
                            "type": "string",
                            "description": "Name of the club",
                            "example": "Fitness Club"
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Name of the club",
                            "example": "Fitness Club"
                          },
                          "address": {
                            "type": "string",
                            "description": "Address of the club",
                            "example": "123 Main St"
                          },
                          "city": {
                            "type": "string",
                            "description": "City of the club",
                            "example": "New York"
                          }
                        }
                      },
                      "description": "List of clubs where the coach works",
                      "example": [
                        {
                          "id": "65ca63kj7ae7f10c88b598384",
                          "name": "Fitness Club",
                          "address": "123 Main St",
                          "city": "New York"
                        },
                        {
                          "id": "65coo7e7ae7f10c88b598384",
                          "name": "Yoga Center",
                          "address": "456 Elm St",
                          "city": "Los Angeles"
                        }
                      ]
                    },
                    "coach": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "ID of the coach job",
                            "example": "65ca63kj7ae7f10c88b598384"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the coach job",
                            "example": "Personal Trainer"
                          },
                          "address": {
                            "type": "string",
                            "description": "Address of the coach job",
                            "example": "789 Oak St"
                          },
                          "city": {
                            "type": "string",
                            "description": "City of the coach job",
                            "example": "New York"
                          }
                        }
                      },
                      "description": "List of current coach jobs at this sports club",
                      "example": [
                        {
                          "id": "65ca63kj7ae7f10c88b598384",
                          "firstName": "Personal",
                          "lastName": "Trainer",
                          "address": "789 Oak St",
                          "city": "New York"
                        },
                        {
                          "id": "65coo7e7ae7f10c88b598384",
                          "firstName": "Group",
                          "lastName": "Fitness",
                          "address": "101 Pine St",
                          "city": "Los Angeles"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/cards/{id}": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "Get  card by id",
        "operationId": "getCard",
        "description": "Retrieve coach or club card by id !",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string",
              "example": "67c4c89d4d695e8b07c91dab"
            },
            "description": "Card id "
          }
        ],
        "responses": {
          "200": {
            "description": "Found card with by id!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found card with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/userProfile"
                      }
                    },
                    "userComments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/reviews"
                      }
                    },
                    "paginationData": {
                      "type": "object",
                      "properties": {
                        "totalItems": {
                          "type": "integer"
                        },
                        "totalPages": {
                          "type": "integer"
                        },
                        "currentPage": {
                          "type": "integer"
                        }
                      }
                    },
                    "club": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "ID of the club",
                            "example": "65ca63kj7ae7f10c88b598384"
                          },
                          "firstName": {
                            "type": "string",
                            "description": "Name of the club",
                            "example": "Fitness Club"
                          },
                          "lastName": {
                            "type": "string",
                            "description": "Name of the club",
                            "example": "Fitness Club"
                          },
                          "address": {
                            "type": "string",
                            "description": "Address of the club",
                            "example": "123 Main St"
                          },
                          "city": {
                            "type": "string",
                            "description": "City of the club",
                            "example": "New York"
                          }
                        }
                      },
                      "description": "List of clubs where the coach works",
                      "example": [
                        {
                          "id": "65ca63kj7ae7f10c88b598384",
                          "firstName": "Fitness Club",
                          "address": "123 Main St",
                          "city": "New York"
                        },
                        {
                          "id": "65coo7e7ae7f10c88b598384",
                          "firstName": "Yoga",
                          "lastName": "Wellness",
                          "address": "456 Elm St",
                          "city": "Los Angeles"
                        }
                      ]
                    },
                    "coach": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "ID of the coach job",
                            "example": "65ca63kj7ae7f10c88b598384"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the coach job",
                            "example": "Personal Trainer"
                          },
                          "address": {
                            "type": "string",
                            "description": "Address of the coach job",
                            "example": "789 Oak St"
                          },
                          "city": {
                            "type": "string",
                            "description": "City of the coach job",
                            "example": "New York"
                          }
                        }
                      },
                      "description": "List of current coach jobs at this sports club",
                      "example": [
                        {
                          "id": "65ca63kj7ae7f10c88b598384",
                          "name": "Personal Trainer",
                          "address": "789 Oak St"
                        },
                        {
                          "id": "65coo7e7ae7f10c88b598384",
                          "name": "Group Trainer",
                          "address": "101 Pine St"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/favorites": {
      "get": {
        "tags": [
          "Favorite"
        ],
        "summary": "Get all club or coach cards",
        "operationId": "getFavoritesCard",
        "description": "Get club cards",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully get club cards",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully club or coach cards"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "userId": {
                            "type": "string",
                            "format": "ObjectId",
                            "example": "65f2dc3b8a7e8e3e3b5a3a1b"
                          },
                          "firstName": {
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 50,
                            "description": "First  name of the user. or name of sport club",
                            "example": "John Doe || The Best Gym "
                          },
                          "lastName": {
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 50,
                            "description": " Last name of the user.",
                            "example": "Doe"
                          },
                          "avatar": {
                            "type": "string",
                            "format": "uri",
                            "description": "Avatar URL of the user.",
                            "example": "https://example.com/avatar.jpg"
                          },
                          "images": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "uri"
                            },
                            "description": "Array of image URLs for the sport gym.",
                            "example": [
                              "https://example.com/image1.jpg",
                              "https://example.com/image2.jpg"
                            ]
                          },
                          "certificates": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "uri"
                            },
                            "description": "Array of URLs for the coach certificates or gym.",
                            "example": [
                              "https://example.com/certificate1.pdf",
                              "https://example.com/certificate2.pdf"
                            ]
                          },
                          "description": {
                            "type": "object",
                            "properties": {
                              "address": {
                                "type": "string",
                                "description": "Address of the  sport club or coach.",
                                "example": "Odesa, 123 Main St"
                              },
                              "city": {
                                "type": "string",
                                "description": "City of the sport club or coach.",
                                "example": "Odesa"
                              },
                              "short_desc": {
                                "type": "string",
                                "description": "Short description of the coach or sport club.",
                                "example": "Experienced coach in football."
                              },
                              "abilities": {
                                "type": "string",
                                "description": "User’s abilities.",
                                "example": "Coaching, mentoring"
                              },
                              "equipment": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "List of gym equipment.",
                                "example": [
                                  "Pool",
                                  "Sauna"
                                ]
                              },
                              "experience": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "format": "date"
                                },
                                "description": "Experience dates of the coach.",
                                "example": [
                                  "2020-01-01",
                                  "2021-01-01"
                                ]
                              },
                              "schedule": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "days": {
                                      "type": "string",
                                      "description": "Days of the week.",
                                      "example": "Monday, Wednesday"
                                    },
                                    "hours": {
                                      "type": "string",
                                      "description": "Working hours.",
                                      "example": "9:00 AM - 5:00 PM"
                                    },
                                    "date": {
                                      "type": "string",
                                      "format": "date",
                                      "description": "Date of the schedule. For example, special days such as holidays",
                                      "example": "2023-12-01"
                                    }
                                  }
                                }
                              },
                              "social_links": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the social platform.",
                                      "example": "Facebook"
                                    },
                                    "url": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "URL to the social media profile.",
                                      "example": "https://facebook.com/example"
                                    }
                                  }
                                }
                              },
                              "price": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Price name or description.",
                                      "example": "Monthly Subscription"
                                    },
                                    "amount": {
                                      "type": "string",
                                      "description": "Price amount.",
                                      "example": "99.99"
                                    }
                                  }
                                }
                              },
                              "phone": {
                                "type": "string",
                                "pattern": "^\\+?[0-9]{10,15}$",
                                "description": "Phone number of the gym or coach .",
                                "example": "+1234567890"
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "description": "Email address of the user.",
                                "example": "example@gmail.com"
                              }
                            }
                          },
                          "club": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of clubs id where the coach works.",
                            "example": [
                              "65ca67e7ae7f10c88b598384",
                              "65ca67e7ae7f10c88b59ke84"
                            ]
                          },
                          "coach": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "List of current coach id jobs at this sports club.",
                            "example": [
                              "65ca63kj7ae7f10c88b598384",
                              "65coo7e7ae7f10c88b598384"
                            ]
                          },
                          "favorite": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Type of favorite item.",
                                  "example": "65ca63kj7ae7f10c88b598384"
                                }
                              }
                            }
                          },
                          "role": {
                            "type": "string",
                            "description": "User role",
                            "example": "coach || customer || adminClub"
                          },
                          "coaches_list": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/userProfile"
                            }
                          },
                          "work_list": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/userProfile"
                            }
                          },
                          "user_comments": {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/reviews"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/favorites/{id}": {
      "post": {
        "tags": [
          "Favorite"
        ],
        "summary": "Add a coach or club to favorites",
        "operationId": "addToFavorites",
        "description": "Add a coach or club to the users favorite list",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "itemId",
                  "type"
                ],
                "properties": {
                  "itemId": {
                    "type": "string",
                    "format": "ObjectId",
                    "description": "ID of the coach or club to add to favorites",
                    "example": "65f2dc3b8a7e8e3e3b5a3a1b"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "coach",
                      "adminClub"
                    ],
                    "description": "Type of the favorite item",
                    "example": "coach"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item successfully added to favorites",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully added to favorites"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "string",
                          "format": "ObjectId",
                          "example": "65f2dc3b8a7e8e3e3b5a3a1b"
                        },
                        "favorite": {
                          "type": "array"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Favorite"
        ],
        "summary": "Delete fav card by id",
        "operationId": "deleteFavCard",
        "description": "Delete favorite card by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "67c4c89d4d695e8b07c91dab"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully remove a card from favorites"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/reviews": {
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "Create a new review",
        "operationId": "addReview",
        "description": "Allows a user to submit a review for a club or trainer.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reviews"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Review created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created review!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/reviews"
                    },
                    "overallRating": {
                      "type": "number",
                      "example": 4.5
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/reviews/owner/{id}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Get all reviews created by a user",
        "operationId": "getOwnerReviews",
        "description": "Returns all reviews written by a user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The user ID whose reviews are being requested",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved reviews",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully retrieved reviews!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/reviews"
                      }
                    },
                    "total": {
                      "type": "integer",
                      "example": 5
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/reviews/user/{id}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Get all reviews about a specific user.",
        "operationId": "getUserReviews",
        "description": "Returns all reviews where a specific user was mentioned.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The user ID for whom reviews are being retrieved",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved reviews",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully retrieved reviews!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/reviews"
                      }
                    },
                    "total": {
                      "type": "integer",
                      "example": 5
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/reviews/{id}": {
      "patch": {
        "tags": [
          "Reviews"
        ],
        "summary": "Update an existing review",
        "operationId": "updateReview",
        "description": "Allows the owner of a review to edit their comment, rating.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the review to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ratings": {
                    "type": "object",
                    "properties": {
                      "clientService": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5,
                        "example": 5
                      },
                      "serviceQuality": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5,
                        "example": 4
                      },
                      "priceQuality": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5,
                        "example": 3
                      },
                      "location": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5,
                        "example": 4
                      },
                      "cleanliness": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5,
                        "example": 5
                      }
                    }
                  },
                  "comment": {
                    "type": "string",
                    "minLength": 20,
                    "maxLength": 500,
                    "example": "After renovation, the club has improved a lot!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Review updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Review updated successfully!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Review not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Reviews"
        ],
        "summary": "Delete a review",
        "operationId": "deleteReview",
        "description": "Allows the owner of a review to delete it.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the review to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Review deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Review deleted successfully!"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Review not found"
          }
        }
      }
    },
    "/reviews/{id}/reply": {
      "patch": {
        "tags": [
          "Reviews"
        ],
        "summary": "Reply to a review",
        "operationId": "replyToReview",
        "description": "Allows an admin to reply to a review.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the review to reply to",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "adminReply": {
                    "type": "string",
                    "example": "Thank you for your feedback!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reply added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reply added successfully!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Review not found"
          }
        }
      }
    },
    "/reviews/{id}/report": {
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "Report a review",
        "operationId": "reportReview",
        "description": "Allows users to report an inappropriate review.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the review to report",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "example": "Inappropriate content"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Report submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Report submitted successfully!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Review not found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "400": {
        "description": "Validation error\n",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found  error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not found "
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Email in use",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Email in use"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "auth": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "description": "Email for registration and login",
            "type": "string",
            "example": "example@gmail.com"
          },
          "password": {
            "description": "Password for registration and login",
            "type": "string",
            "example": "13234gssu"
          },
          "role": {
            "description": "Role for registration",
            "type": "string",
            "example": "customer"
          },
          "firstName": {
            "description": "User first name",
            "type": "string",
            "example": "Володимир"
          },
          "lastName": {
            "description": "User last name",
            "type": "string",
            "example": "Кіт"
          },
          "clubName": {
            "description": "name user club",
            "type": "string",
            "example": "Sport Life"
          },
          "phone": {
            "description": "User phone number",
            "type": "string",
            "example": "+380678654323"
          },
          "address": {
            "description": "User address",
            "type": "string",
            "example": "Шевченка, 30"
          },
          "city": {
            "description": "User city",
            "type": "string",
            "example": "Львів"
          },
          "abilities": {
            "description": "User abilities",
            "type": "string",
            "example": "Coaching, mentoring"
          },
          "sport": {
            "description": "User sport",
            "type": "string",
            "example": "Карате"
          },
          "avatar": {
            "description": "User avatar",
            "type": "string",
            "format": "uri",
            "example": "https://example.com/avatar.jpg"
          },
          "images": {
            "description": "Array of image URLs",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "example": [
              "https://example.com/image1.jpg",
              "https://example.com/image2.jpg"
            ]
          },
          "token": {
            "type": "string",
            "default": null,
            "description": "JWT token for user authentication",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxMjM0NTY3ODkwLCJpYXQiOjE2Mzg5NzM5NzZ9.A0RtZ6r7u-oJX0iKL-WiXXSTZ_GUqvphgByLN0Awfn8"
          },
          "refreshToken": {
            "type": "string",
            "default": null,
            "description": "Refresh token for user authentication",
            "example": "dGVzdC1yZWZyZXNoLXRva2Vu"
          },
          "verify": {
            "type": "boolean",
            "default": false
          },
          "verificationToken": {
            "type": "string",
            "description": "Token used for email verification"
          },
          "verifyCode": {
            "type": "number",
            "default": null
          }
        }
      },
      "userProfile": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "65f2dcd8e3b5a3a1b8a7e8e3"
          },
          "userId": {
            "type": "string",
            "format": "string",
            "example": "65f2dc3b8a7e8e3e3b5a3a1b"
          },
          "firstName": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "description": "First  name of the user.",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "minLength": 2,
            "maxLength": 50,
            "description": " Last name of the user.",
            "example": "Doe"
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "Avatar URL of the user.",
            "example": "https://example.com/avatar.jpg"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            },
            "description": "Array of image  for the user.",
            "example": [
              "image1.jpg",
              "image2.jpg"
            ]
          },
          "certificates": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            },
            "description": "Array of  for the user’s certificates.",
            "example": [
              "certificate1.pdf",
              "certificate2.pdf"
            ]
          },
          "description": {
            "type": "object",
            "properties": {
              "address": {
                "type": "string",
                "description": "Address of the sport club.",
                "example": "123 Main St"
              },
              "city": {
                "type": "string",
                "description": "City of the sport club.",
                "example": "New York"
              },
              "short_desc": {
                "type": "string",
                "description": "Short description of the coach or sport club.",
                "example": "Experienced coach in football."
              },
              "abilities": {
                "type": "array",
                "description": "Coach abilities.",
                "example": [
                  "Coaching",
                  "Mentoring"
                ]
              },
              "age": {
                "type": "string",
                "description": "User age",
                "example": "40"
              },
              "equipment": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of sport club equipment.",
                "example": [
                  "Pool",
                  "Sauna"
                ]
              },
              "experience": {
                "type": "string",
                "description": "Experience dates of the user.",
                "example": "6"
              },
              "schedule": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "days": {
                      "type": "string",
                      "description": "Days of the week.",
                      "example": "Monday, Wednesday"
                    },
                    "hours": {
                      "type": "string",
                      "description": "Working hours.",
                      "example": "9:00 AM - 5:00 PM"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Date of the schedule.",
                      "example": "2023-12-01"
                    }
                  }
                }
              },
              "social_links": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the social platform.",
                      "example": "Facebook"
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "description": "URL to the social media profile.",
                      "example": "https://facebook.com/example"
                    }
                  }
                }
              },
              "price": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Price name or description.",
                      "example": "Monthly Subscription"
                    },
                    "description": {
                      "type": "string",
                      "description": "Price  description.",
                      "example": "07:00-14:00"
                    },
                    "amount": {
                      "type": "string",
                      "description": "Price amount.",
                      "example": "99.99"
                    }
                  }
                }
              },
              "phone": {
                "type": "string",
                "pattern": "^\\+?[0-9]{10,15}$",
                "description": "Phone number of the user.",
                "example": "+1234567890"
              },
              "email": {
                "type": "string",
                "format": "email",
                "description": "Email address of the user.",
                "example": "example@gmail.com"
              }
            }
          },
          "club": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "ID of the club",
                  "example": "65ca63kj7ae7f10c88b598384"
                },
                "firstName": {
                  "type": "string",
                  "description": "Name of the club",
                  "example": "Fitness Club"
                },
                "lastName": {
                  "type": "string",
                  "description": "Name of the club",
                  "example": "Fitness Club"
                },
                "address": {
                  "type": "string",
                  "description": "Address of the club",
                  "example": "123 Main St"
                },
                "city": {
                  "type": "string",
                  "description": "City of the club",
                  "example": "New York"
                }
              }
            },
            "description": "List of clubs where the coach works",
            "example": [
              {
                "id": "65ca63kj7ae7f10c88b598384",
                "firstName": "Fitness",
                "lastName": "Club",
                "address": "123 Main St",
                "city": "New York"
              },
              {
                "id": "65coo7e7ae7f10c88b598384",
                "firstName": "Yoga",
                "lastName": "Wellness",
                "address": "456 Elm St",
                "city": "Los Angeles"
              }
            ]
          },
          "coach": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "description": "ID of the coach job",
                  "example": "65ca63kj7ae7f10c88b598384"
                },
                "firstName": {
                  "type": "string",
                  "description": "Name of the coach job",
                  "example": "Personal "
                },
                "lastName": {
                  "type": "string",
                  "description": "Name of the coach job",
                  "example": "Trainer"
                },
                "address": {
                  "type": "string",
                  "description": "Address of the coach job",
                  "example": "789 Oak St"
                },
                "city": {
                  "type": "string",
                  "description": "City of the coach job",
                  "example": "Chicago"
                }
              }
            },
            "description": "List of current coach jobs at this sports club",
            "example": [
              {
                "id": "65ca63kj7ae7f10c88b598384",
                "firstName": "Personal Trainer",
                "lastName": "Fitness",
                "address": "789 Oak St",
                "city": "Chicago"
              },
              {
                "id": "65coo7e7ae7f10c88b598384",
                "firstName": "Group",
                "lastName": "Fitness",
                "address": "101 Pine St",
                "city": "San Francisco"
              }
            ]
          },
          "favorite": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "format": "uuid",
                "description": "User ID of the favorite item",
                "example": "65ca63kj7ae7f10c88b598384"
              },
              "role": {
                "type": "string",
                "description": "Role associated with the favorite item",
                "example": "coach"
              }
            }
          },
          "sport": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "What is the name of the sport?",
              "example": [
                "Football",
                "Basketball",
                "Hockey",
                "Tennis",
                "Golf"
              ]
            }
          },
          "role": {
            "type": "string",
            "description": "User role",
            "example": "coach || customer || adminClub"
          }
        }
      },
      "reviews": {
        "type": "object",
        "required": [
          "ratings",
          "comment"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "example": "65f2dcd8e3b5a3a1b8a7e8e3"
          },
          "user": {
            "type": "string",
            "format": "ObjectId",
            "example": "65f2dc3b8a7e8e3e3b5a3a1b"
          },
          "club": {
            "type": "string",
            "format": "ObjectId",
            "example": "65f2dcd8e3b5a3a1b8a7e8e4"
          },
          "trainer": {
            "type": "string",
            "format": "ObjectId",
            "example": "65f2dcd8e3b5a3a1b8a7e8e5"
          },
          "ratings": {
            "type": "object",
            "properties": {
              "clientService": {
                "type": "integer",
                "minimum": 1,
                "maximum": 5,
                "example": 5
              },
              "serviceQuality": {
                "type": "integer",
                "minimum": 1,
                "maximum": 5,
                "example": 4
              },
              "priceQuality": {
                "type": "integer",
                "minimum": 1,
                "maximum": 5,
                "example": 3
              },
              "location": {
                "type": "integer",
                "minimum": 1,
                "maximum": 5,
                "example": 4
              },
              "cleanliness": {
                "type": "integer",
                "minimum": 1,
                "maximum": 5,
                "example": 5
              }
            }
          },
          "average": {
            "type": "number",
            "minimum": 0,
            "maximum": 5,
            "example": 4.2
          },
          "comment": {
            "type": "string",
            "minLength": 20,
            "maxLength": 500,
            "example": "Дуже гарний клуб, але трохи завищена ціна."
          },
          "adminReply": {
            "type": "string",
            "example": "Дякуємо за ваш відгук!"
          },
          "reports": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string",
                  "format": "ObjectId",
                  "example": "65f2dc3b8a7e8e3e3b5a3a1c"
                },
                "reason": {
                  "type": "string",
                  "example": "Невідповідний зміст"
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-03-03T12:34:56.789Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-03-04T14:56:23.456Z"
          }
        }
      }
    }
  }
}